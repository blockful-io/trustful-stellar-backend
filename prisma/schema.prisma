// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String         @id
  first_seen_ledger Int
  last_seen_ledger  Int?

  // Add the opposite relation fields
  sent_additions     UserAddition[] @relation("SenderAdditions")
  received_additions UserAddition[] @relation("UserAdditions")
}

model UserAddition {
  id        String  @id
  ledger    Int
  timestamp String
  sender    Account @relation("SenderAdditions", fields: [sender_id], references: [id])
  sender_id String
  user      Account @relation("UserAdditions", fields: [user_id], references: [id])
  user_id   String
  contract  String
}

model Community {
  id          String            @id
  issuer      String
  name        String
  description String?
  is_hidden   Boolean          @default(false)
  members     CommunityMember[]

  @@map("communities")
}

model CommunityMember {
  id                String    @id
  user_id          String
  community_id     String
  community        Community @relation(fields: [community_id], references: [id])
  score            Float
  last_score_update String?

  @@map("community_members")
}
